name: infra-as-code

# Manually triggered
on:
  workflow_dispatch:
    inputs:
        envname:
          description: 'Environment (one of "dev" or "prod")'
          required: true
          default: 'dev'

jobs:
  deploy:
    name: Run cloudformation to create Amazon S3 bucket
    runs-on: ubuntu-latest

    steps:
    - name: Deploying to ${{ github.event.inputs.envname }} ...
      run: echo "EnvironmentName=${{ github.event.inputs.envname }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: pwd and ls
      run: |
        pwd
        ls -lrtR

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Create initial S3 buckets
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: S3Stack
        template: cloudformation/S3-stack.yml
        parameter-overrides: "EnvironmentName=${{ github.event.inputs.envname }}"
        no-fail-on-empty-changeset: "1"
    
    - name: Upload Cloudformation Templates to S3 bucket
      run: |
        aws s3 sync cloudformation s3://catsvsdogs-${{ github.event.inputs.envname }}

    - name: Create API gateway stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: APIGatewayStack
        template: cloudformation/APIGateway-stack.yml
        parameter-overrides: >-
          DomainName=dev.goatsinlace.com,
          HostedZoneId=Z10462293U5NB4KI3LCIW,
          APICertValidationCNAMEName=APICertValidationCNAMEName-dev,
          APICertValidationCNAMEValue=APICertValidationCNAMEValue-dev
          
# "file://${{ github.workspace }}/cloudformation/variables-${{ github.event.inputs.envname }}.json"

